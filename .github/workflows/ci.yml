name: CI/CD Laravel avec Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚙️ Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer:v2

      - name: ⚡ Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: 📦 Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

  build:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚡ Cache Node dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install Node dependencies & Build assets
        run: |
          npm install
          npm run build

  test:
    runs-on: ubuntu-latest
    needs: [ install, build ]

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📦 Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: 📝 Copy .env example
        run: cp .env.example .env

      - name: 🔑 Generate application key
        run: php artisan key:generate

      - name: 📜 Run migrations and seed database
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
        run: php artisan migrate --seed --force --no-interaction

      - name: ✅ Run Tests
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: ":memory:"
        run: php artisan test

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: 🏗️ Pull latest Docker images
        run: docker-compose pull

      - name: 🏗️ Build and Start Docker Containers
        run: docker-compose up -d --build

      - name: 🚀 Wait for Laravel to be ready
        run: sleep 120

      - name: 🔍 Check running containers
        run: docker ps -a

      - name: 🚀 Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL..."
          for i in {1..30}; do
            if docker exec secret_santa_mysql mysqladmin ping -h localhost -uroot -proot --silent; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for database..."
            sleep 2
          done

      - name: 📜 Get logs of secret_santa container
        run: docker logs secret_santa

      - name: 🔍 Check PHP-FPM status
        run: docker exec secret_santa ps aux | grep php-fpm

      - name: 🔑 Generate Laravel Key
        run: docker exec secret_santa php artisan key:generate

      - name: 📜 Run Laravel Migrations & Seeders
        run: docker exec secret_santa php artisan migrate --seed --force --no-interaction

      - name: 📨 Test MailHog (Optional)
        run: curl -X GET http://localhost:8025/api/v2/messages | jq

      - name: 🛑 Stop and Clean Up Docker
        if: always()
        run: docker-compose down
